--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=32 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 22.1 cbx_cycloneii 2022:10:25:15:36:38:SC cbx_lpm_add_sub 2022:10:25:15:36:38:SC cbx_lpm_compare 2022:10:25:15:36:38:SC cbx_lpm_decode 2022:10:25:15:36:36:SC cbx_mgl 2022:10:25:15:36:55:SC cbx_nadder 2022:10:25:15:36:38:SC cbx_stratix 2022:10:25:15:36:38:SC cbx_stratixii 2022:10:25:15:36:38:SC  VERSION_END


-- Copyright (C) 2022  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and any partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details, at
--  https://fpgasoftware.intel.com/eula.



--synthesis_resources = lut 36 
SUBDESIGN decode_sma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[31..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[31..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode3226w[2..0]	: WIRE;
	w_anode3239w[3..0]	: WIRE;
	w_anode3256w[3..0]	: WIRE;
	w_anode3266w[3..0]	: WIRE;
	w_anode3276w[3..0]	: WIRE;
	w_anode3286w[3..0]	: WIRE;
	w_anode3296w[3..0]	: WIRE;
	w_anode3306w[3..0]	: WIRE;
	w_anode3316w[3..0]	: WIRE;
	w_anode3328w[2..0]	: WIRE;
	w_anode3337w[3..0]	: WIRE;
	w_anode3348w[3..0]	: WIRE;
	w_anode3358w[3..0]	: WIRE;
	w_anode3368w[3..0]	: WIRE;
	w_anode3378w[3..0]	: WIRE;
	w_anode3388w[3..0]	: WIRE;
	w_anode3398w[3..0]	: WIRE;
	w_anode3408w[3..0]	: WIRE;
	w_anode3419w[2..0]	: WIRE;
	w_anode3428w[3..0]	: WIRE;
	w_anode3439w[3..0]	: WIRE;
	w_anode3449w[3..0]	: WIRE;
	w_anode3459w[3..0]	: WIRE;
	w_anode3469w[3..0]	: WIRE;
	w_anode3479w[3..0]	: WIRE;
	w_anode3489w[3..0]	: WIRE;
	w_anode3499w[3..0]	: WIRE;
	w_anode3510w[2..0]	: WIRE;
	w_anode3519w[3..0]	: WIRE;
	w_anode3530w[3..0]	: WIRE;
	w_anode3540w[3..0]	: WIRE;
	w_anode3550w[3..0]	: WIRE;
	w_anode3560w[3..0]	: WIRE;
	w_anode3570w[3..0]	: WIRE;
	w_anode3580w[3..0]	: WIRE;
	w_anode3590w[3..0]	: WIRE;
	w_data3224w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[31..0] = eq_wire[31..0];
	eq_wire[] = ( ( w_anode3590w[3..3], w_anode3580w[3..3], w_anode3570w[3..3], w_anode3560w[3..3], w_anode3550w[3..3], w_anode3540w[3..3], w_anode3530w[3..3], w_anode3519w[3..3]), ( w_anode3499w[3..3], w_anode3489w[3..3], w_anode3479w[3..3], w_anode3469w[3..3], w_anode3459w[3..3], w_anode3449w[3..3], w_anode3439w[3..3], w_anode3428w[3..3]), ( w_anode3408w[3..3], w_anode3398w[3..3], w_anode3388w[3..3], w_anode3378w[3..3], w_anode3368w[3..3], w_anode3358w[3..3], w_anode3348w[3..3], w_anode3337w[3..3]), ( w_anode3316w[3..3], w_anode3306w[3..3], w_anode3296w[3..3], w_anode3286w[3..3], w_anode3276w[3..3], w_anode3266w[3..3], w_anode3256w[3..3], w_anode3239w[3..3]));
	w_anode3226w[] = ( (w_anode3226w[1..1] & (! data_wire[4..4])), (w_anode3226w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3239w[] = ( (w_anode3239w[2..2] & (! w_data3224w[2..2])), (w_anode3239w[1..1] & (! w_data3224w[1..1])), (w_anode3239w[0..0] & (! w_data3224w[0..0])), w_anode3226w[2..2]);
	w_anode3256w[] = ( (w_anode3256w[2..2] & (! w_data3224w[2..2])), (w_anode3256w[1..1] & (! w_data3224w[1..1])), (w_anode3256w[0..0] & w_data3224w[0..0]), w_anode3226w[2..2]);
	w_anode3266w[] = ( (w_anode3266w[2..2] & (! w_data3224w[2..2])), (w_anode3266w[1..1] & w_data3224w[1..1]), (w_anode3266w[0..0] & (! w_data3224w[0..0])), w_anode3226w[2..2]);
	w_anode3276w[] = ( (w_anode3276w[2..2] & (! w_data3224w[2..2])), (w_anode3276w[1..1] & w_data3224w[1..1]), (w_anode3276w[0..0] & w_data3224w[0..0]), w_anode3226w[2..2]);
	w_anode3286w[] = ( (w_anode3286w[2..2] & w_data3224w[2..2]), (w_anode3286w[1..1] & (! w_data3224w[1..1])), (w_anode3286w[0..0] & (! w_data3224w[0..0])), w_anode3226w[2..2]);
	w_anode3296w[] = ( (w_anode3296w[2..2] & w_data3224w[2..2]), (w_anode3296w[1..1] & (! w_data3224w[1..1])), (w_anode3296w[0..0] & w_data3224w[0..0]), w_anode3226w[2..2]);
	w_anode3306w[] = ( (w_anode3306w[2..2] & w_data3224w[2..2]), (w_anode3306w[1..1] & w_data3224w[1..1]), (w_anode3306w[0..0] & (! w_data3224w[0..0])), w_anode3226w[2..2]);
	w_anode3316w[] = ( (w_anode3316w[2..2] & w_data3224w[2..2]), (w_anode3316w[1..1] & w_data3224w[1..1]), (w_anode3316w[0..0] & w_data3224w[0..0]), w_anode3226w[2..2]);
	w_anode3328w[] = ( (w_anode3328w[1..1] & (! data_wire[4..4])), (w_anode3328w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3337w[] = ( (w_anode3337w[2..2] & (! w_data3224w[2..2])), (w_anode3337w[1..1] & (! w_data3224w[1..1])), (w_anode3337w[0..0] & (! w_data3224w[0..0])), w_anode3328w[2..2]);
	w_anode3348w[] = ( (w_anode3348w[2..2] & (! w_data3224w[2..2])), (w_anode3348w[1..1] & (! w_data3224w[1..1])), (w_anode3348w[0..0] & w_data3224w[0..0]), w_anode3328w[2..2]);
	w_anode3358w[] = ( (w_anode3358w[2..2] & (! w_data3224w[2..2])), (w_anode3358w[1..1] & w_data3224w[1..1]), (w_anode3358w[0..0] & (! w_data3224w[0..0])), w_anode3328w[2..2]);
	w_anode3368w[] = ( (w_anode3368w[2..2] & (! w_data3224w[2..2])), (w_anode3368w[1..1] & w_data3224w[1..1]), (w_anode3368w[0..0] & w_data3224w[0..0]), w_anode3328w[2..2]);
	w_anode3378w[] = ( (w_anode3378w[2..2] & w_data3224w[2..2]), (w_anode3378w[1..1] & (! w_data3224w[1..1])), (w_anode3378w[0..0] & (! w_data3224w[0..0])), w_anode3328w[2..2]);
	w_anode3388w[] = ( (w_anode3388w[2..2] & w_data3224w[2..2]), (w_anode3388w[1..1] & (! w_data3224w[1..1])), (w_anode3388w[0..0] & w_data3224w[0..0]), w_anode3328w[2..2]);
	w_anode3398w[] = ( (w_anode3398w[2..2] & w_data3224w[2..2]), (w_anode3398w[1..1] & w_data3224w[1..1]), (w_anode3398w[0..0] & (! w_data3224w[0..0])), w_anode3328w[2..2]);
	w_anode3408w[] = ( (w_anode3408w[2..2] & w_data3224w[2..2]), (w_anode3408w[1..1] & w_data3224w[1..1]), (w_anode3408w[0..0] & w_data3224w[0..0]), w_anode3328w[2..2]);
	w_anode3419w[] = ( (w_anode3419w[1..1] & data_wire[4..4]), (w_anode3419w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode3428w[] = ( (w_anode3428w[2..2] & (! w_data3224w[2..2])), (w_anode3428w[1..1] & (! w_data3224w[1..1])), (w_anode3428w[0..0] & (! w_data3224w[0..0])), w_anode3419w[2..2]);
	w_anode3439w[] = ( (w_anode3439w[2..2] & (! w_data3224w[2..2])), (w_anode3439w[1..1] & (! w_data3224w[1..1])), (w_anode3439w[0..0] & w_data3224w[0..0]), w_anode3419w[2..2]);
	w_anode3449w[] = ( (w_anode3449w[2..2] & (! w_data3224w[2..2])), (w_anode3449w[1..1] & w_data3224w[1..1]), (w_anode3449w[0..0] & (! w_data3224w[0..0])), w_anode3419w[2..2]);
	w_anode3459w[] = ( (w_anode3459w[2..2] & (! w_data3224w[2..2])), (w_anode3459w[1..1] & w_data3224w[1..1]), (w_anode3459w[0..0] & w_data3224w[0..0]), w_anode3419w[2..2]);
	w_anode3469w[] = ( (w_anode3469w[2..2] & w_data3224w[2..2]), (w_anode3469w[1..1] & (! w_data3224w[1..1])), (w_anode3469w[0..0] & (! w_data3224w[0..0])), w_anode3419w[2..2]);
	w_anode3479w[] = ( (w_anode3479w[2..2] & w_data3224w[2..2]), (w_anode3479w[1..1] & (! w_data3224w[1..1])), (w_anode3479w[0..0] & w_data3224w[0..0]), w_anode3419w[2..2]);
	w_anode3489w[] = ( (w_anode3489w[2..2] & w_data3224w[2..2]), (w_anode3489w[1..1] & w_data3224w[1..1]), (w_anode3489w[0..0] & (! w_data3224w[0..0])), w_anode3419w[2..2]);
	w_anode3499w[] = ( (w_anode3499w[2..2] & w_data3224w[2..2]), (w_anode3499w[1..1] & w_data3224w[1..1]), (w_anode3499w[0..0] & w_data3224w[0..0]), w_anode3419w[2..2]);
	w_anode3510w[] = ( (w_anode3510w[1..1] & data_wire[4..4]), (w_anode3510w[0..0] & data_wire[3..3]), enable_wire);
	w_anode3519w[] = ( (w_anode3519w[2..2] & (! w_data3224w[2..2])), (w_anode3519w[1..1] & (! w_data3224w[1..1])), (w_anode3519w[0..0] & (! w_data3224w[0..0])), w_anode3510w[2..2]);
	w_anode3530w[] = ( (w_anode3530w[2..2] & (! w_data3224w[2..2])), (w_anode3530w[1..1] & (! w_data3224w[1..1])), (w_anode3530w[0..0] & w_data3224w[0..0]), w_anode3510w[2..2]);
	w_anode3540w[] = ( (w_anode3540w[2..2] & (! w_data3224w[2..2])), (w_anode3540w[1..1] & w_data3224w[1..1]), (w_anode3540w[0..0] & (! w_data3224w[0..0])), w_anode3510w[2..2]);
	w_anode3550w[] = ( (w_anode3550w[2..2] & (! w_data3224w[2..2])), (w_anode3550w[1..1] & w_data3224w[1..1]), (w_anode3550w[0..0] & w_data3224w[0..0]), w_anode3510w[2..2]);
	w_anode3560w[] = ( (w_anode3560w[2..2] & w_data3224w[2..2]), (w_anode3560w[1..1] & (! w_data3224w[1..1])), (w_anode3560w[0..0] & (! w_data3224w[0..0])), w_anode3510w[2..2]);
	w_anode3570w[] = ( (w_anode3570w[2..2] & w_data3224w[2..2]), (w_anode3570w[1..1] & (! w_data3224w[1..1])), (w_anode3570w[0..0] & w_data3224w[0..0]), w_anode3510w[2..2]);
	w_anode3580w[] = ( (w_anode3580w[2..2] & w_data3224w[2..2]), (w_anode3580w[1..1] & w_data3224w[1..1]), (w_anode3580w[0..0] & (! w_data3224w[0..0])), w_anode3510w[2..2]);
	w_anode3590w[] = ( (w_anode3590w[2..2] & w_data3224w[2..2]), (w_anode3590w[1..1] & w_data3224w[1..1]), (w_anode3590w[0..0] & w_data3224w[0..0]), w_anode3510w[2..2]);
	w_data3224w[2..0] = data_wire[2..0];
END;
--VALID FILE
