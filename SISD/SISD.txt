_start:
    suma R0,R15,R15 // posicion inicial vector x
    suma R1,R15,R1 //posicion inicial b
    suma R2,R15,R1 // direccion inicial de salida
    suma R3,R15,R15 // contador de datos totales guardados
    suma R4,R15,R15 // offset de R4
    suma R17,R15,R15 // suma de elementos por fila
    suma R18,R15,R15
    brinco cicloFiltro

cicloFiltro:
    cargar R5,0(R0) // carga primer elemento de x
    suma R4,R1,R4 // direccion de b con offset
    cargar R6,0(R4) // carga primer valor de b

    // EMPIEZA multiplicacion
    // Qa.b x Qc.d
    cad R7,R5,8
    unioncita R8,R5,255

    cad R9,R6,8
    unioncita R11,R6,255

    // R7 a
    // R8 b
    // R9 c
    // R11 d

    // high = a x c << 8
    mult R12,R7,R8
    clivec R12,R12,8 

    //mid
    // a × d + b × c
    mult R13,R7,R11
    mult R14,R8,R9
    suma R13,R13,R14

    // low  >> 8
    // b x d
    mult R14,R8,R11
    cad R14,R14,8

    //result = high << 8 + mid + low >> 8
    suma R5,R13,R14
    suma R5,R5,R12

    suma R17,R17,R5 // copia del resultado a R17

    sumita R4,R4,1
    suma R18,R15,1
    sumita R19,R15,16 // cambiar si son menos columnas
    igual R18,R19,almacenarResultado

    brinco cicloFiltro


almacenarResultado:
    guardar R17,0(R0)
    sumita R0,R0,1
    sumita R3,R3,1
    suma R4,R15,R15 // reiniciar offset
    suma R18,R15,R15 // reiniciar offset de elementos por fila

    igual R3,R10,_end

    brinco cicloFiltro

_end:
    sumita R0,R15,1
    sumita R1,R15,1
    sumita R2,R15,1
    sumita R28,R15,333



_start:
    suma R0,R15,R15 // posicion inicial vector x
    sumita R1,R15,R1 // posicion inicial vector b
    sumita r9,r15,r15 // contador de iteraciones 
    sumita r12,r15, //direccion de guardado de los datos
    sumita r13,r15, //contador de datos totales guardados
    brinco cicloFiltro

cicloFiltro:
    cargar r2,0(r0)
    cargar r4,0(r1)

    unioncita r3,r2,255
    unioncita r2,r2,32515

    unioncita r5,r4,255
    unioncita r4,r4,32515

    // r2 a
    // r3 b
    // r4 c
    // r5 d

    // high = a x c
    mult r6,r2,r4

    //mid
    // a × d + b × c
    mult r7,r2,r5
    mult r8,r3,r4
    suma r7,r7,r8

    // low
    // b x d
    mult r8,r3,r5

    //result = high << 8 + mid + low >> 8
    cli r6,r6,8
    cad r8,r8,8
    suma r6,r6,r7
    suma r6,r6,r8

    // limpiar registros
    suma r7,r15,r15
    suma r8,r15,r15

    suma r10,r15,r6 // copia el resultado de la multiplicacion a r10

    brinco sumandoElementos

sumandoElementos:
    cargar r2,1(r0)
    cargar r4,1(r1)

    unioncita r3,r2,255
    unioncita r2,r2,32515

    unioncita r5,r4,255
    unioncita r4,r4,32515
// r2 a
    // r3 b
    // r4 c
    // r5 d

    // high = a x c
    mult r6,r2,r4

    //mid
    // a × d + b × c
    mult r7,r2,r5
    mult r8,r3,r4
    suma r7,r7,r8

    // low
    // b x d
    mult r8,r3,r5

    //result = high << 8 + mid + low >> 8
    cli r6,r6,8
    cad r8,r8,8
    suma r6,r6,r7
    suma r6,r6,r8

    // limpiar registros
    suma r7,r15,r15
    suma r8,r15,r15

    suma r10,r10,r6 

    suma r9,r9,2
    suma r11,r15,16
    igual r9,r11,almacenarResultado

    brinco cicloFiltro


almacenarResultado:
    guardar r10,0(r12)
    sumita r12,r12,1

    sumita r14,r15,//valor maximo de guardado
    igual r13,r14,_end

    suma r9,r15,r15 // reiniciar contador de iteraciones
    sumita r0,r15,0 // regresar a la posicion inicial de b
    sumita r1,r1,1 // posicion siguiente vector x, revisar si es necesario
    brinco cicloFiltro

_end:
    suma r15,r15,r15